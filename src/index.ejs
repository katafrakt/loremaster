<!DOCTYPE html>
<html>
	<head>
		<title>{{STORY_NAME}}</title>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<%
			/* See https://github.com/jantimon/html-webpack-plugin/tree/master/examples/inline */

			if (inline) {
				assets.css.forEach(css =>
					print(`<style>${compilation.assets[css.substr(assets.publicPath.length)].source()}</style>`)
				)
			}
      %>
    <style>
      tw-storydata {
        display: none;
      }
    </style>
    <link rel="stylesheer" href="https://fonts.googleapis.com/css?family=Great+Vibes|Libre+Baskerville&display=swap" />
	</head>
	<body class="antialiased font-body font-serif">
    <%= storyData %>
    <div class="container max-w-3xl px-4 mx-auto">
      <div id="app"></div>
    </div>

    <!--Modal-->
    <div class="modal opacity-0 pointer-events-none fixed w-full h-full top-0 left-0 flex items-center justify-center">
      <div class="modal-overlay absolute w-full h-full bg-gray-900 opacity-50"></div>
      
      <div class="modal-container bg-white w-11/12 md:max-w-md mx-auto rounded shadow-lg z-50 overflow-y-auto">
        
        <div class="modal-close absolute top-0 right-0 cursor-pointer flex flex-col items-center mt-4 mr-4 text-white text-sm z-50">
          <svg class="fill-current text-white" xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 18 18">
            <path d="M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z"></path>
          </svg>
          <span class="text-sm">(Esc)</span>
        </div>

        <!-- Add margin if you want to see some of the overlay behind the modal-->
        <div class="modal-content py-4 text-left px-6">

          <!--Body-->
          <div id="modal-body"></div>

          <!--Footer-->
          <div class="flex justify-end pt-1">
            <button class="modal-close px-2 bg-gray-500 p-1 rounded-lg text-white hover:bg-gray-400">Close</button>
          </div>
          
        </div>
      </div>
    </div>

    <script>
      var openmodal = document.querySelectorAll('.modal-open')
      for (var i = 0; i < openmodal.length; i++) {
        openmodal[i].addEventListener('click', function(event){
        event.preventDefault()
        document.dispatchEvent(new Event('toggleModal'))
        })
      }
      
      const overlay = document.querySelector('.modal-overlay')
      overlay.addEventListener('click', function() { document.dispatchEvent(new Event('toggleModal')) });
      
      var closemodal = document.querySelectorAll('.modal-close')
      for (var i = 0; i < closemodal.length; i++) {
        closemodal[i].addEventListener('click', function() { document.dispatchEvent(new Event('toggleModal')) });
      }
      
      document.onkeydown = function(evt) {
        evt = evt || window.event
        var isEscape = false
        if ("key" in evt) {
        isEscape = (evt.key === "Escape" || evt.key === "Esc")
        } else {
        isEscape = (evt.keyCode === 27)
        }
        if (isEscape && document.body.classList.contains('modal-active')) {
          document.dispatchEvent(new Event('toggleModal'));
        }
      };
      
      document.addEventListener('toggleModal', function(e) {
        const body = document.querySelector('body')
        const modal = document.querySelector('.modal')
        modal.classList.toggle('opacity-0')
        modal.classList.toggle('pointer-events-none')
        body.classList.toggle('modal-active')
      }); 
    </script>
	</body>
</html>